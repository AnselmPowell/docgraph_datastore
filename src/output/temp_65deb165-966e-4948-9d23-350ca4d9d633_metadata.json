{
  "metadata": {
    "filename": "temp_65deb165-966e-4948-9d23-350ca4d9d633",
    "extraction_date": "2025-01-19T15:46:16.058364",
    "path": "research_assistant\\data\\temp_65deb165-966e-4948-9d23-350ca4d9d633.pdf"
  },
  "pages": {
    "1": "See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/328454982\nA Large Agile Organization on Its Journey Towards DevOps\nConference Paper · August 2018\nDOI: 10.1109/SEAA.2018.00019\nCITATIONS\n38\nREADS\n1,087\n8 authors, including:\nKati Kuusinen\nTechnical University of Denmark\n40 PUBLICATIONS   649 CITATIONS   \nSEE PROFILE\nSune Chung Jepsen\nUniversity of Southern Denmark\n14 PUBLICATIONS   112 CITATIONS   \nSEE PROFILE\nAdmir Muric\nUniversity of Southern Denmark\n2 PUBLICATIONS   44 CITATIONS   \nSEE PROFILE\nAll content following this page was uploaded by Admir Muric on 18 February 2019.\nThe user has requested enhancement of the downloaded file.",
    "2": "A Large Agile Organization on its Journey towards \nDevOps\nKati Kuusinen, Veena Balakumar, Sune Chung Jepsen, Simon Hjortshøj Larsen, \nThomas August Lemqvist, Admir Muric, Anna Ølgaar Nielsen, and Oliver Vestergaard\nUniversity of Southern Denmark  \nOdense, Denmark\nkaku@mmmi.sdu.dk, \n{vebal13, sujep06, sila114, thlem14, admur13, annni17, olves13}@student.sdu.dk\nAbstract—Software companies are increasingly adopting\nDevOps and\ncontinuous software engineering practices to \nsupport short feedback loops, gain better control and visibility \nover deployments, and decrease the need for manual work with \nthe help of automated processes. While adopting DevOps\npractices can lead to various benefits, companies also face many \nkinds of challenges in the transition. This short paper presents \nthe results of a case study conducted in a large Danish software \nservice house about their experiences of transitioning towards \nDevOps. We got 30 completed survey responses and interviewed \nfour persons in software engineering related roles. We present \nthe current state of the company with challenges and suggestions \nto improvement. To reach DevOps, the company will need a \nmajor cultural change. However, the respondents were positive\nthat the adoption of continuous software engineering practices \nwould mitigate some of their prevailing challenges. \nKeywords—DevOps, \ncontinuous \ndevelopment, \nlarge \norganisation\nI. INTRODUCTION\nDevOps integrates software development and operations \n[3]. It is characterized by tight coupling of development and \noperations functions, automation of development, deployment \nand monitoring, and performance measurement [3, 8]. The \nbenefits DevOps can provide include fast and continuous value \ndelivery, improved communication, and accelerated problem \nsolving [3]. DevOps relies on automated deployment pipeline \nthat consists of continuous integration (CI), test automation, \nand release automation [12]. The benefits of the automated \npipeline include minimizing manual repetitive work and being \nable to release whenever working software has been developed \nwhich again leads to getting rapid user and customer feedback, \ni.e. learning fast [2]. Short learning loops are a core goal of lean \nand agile software development as they let the developers to \nfail fast and create value fast and frequently. \nCompanies are adopting DevOps and continuous software \nengineering practices to gain these benefits and be more able to \ncompete on the market [2]. Also, as there is an increasing \nshortage of professional software developers in the market [10],\nimproving their efficiency by removing repetitive manual work \nis essential. However, updating the software engineering of a \nlarge \ncompany \ninto \nthese \nmodern \npractices \nis \nnot \nstraightforward. Typically, it is more complicated to adopt \ncontinuous delivery in larger companies with many roles with \ntheir individual responsibilities and specialized departments \n[2]. Continuous delivery adoption is therefore highly dependent \non the company structure.  \nThis paper describes the current state of a large software \nservice company and the challenges it is facing from early on \nits journey towards DevOps. The paper also addresses how\nadopting continuous software engineering practices could\nmitigate their challenges and how they can improve their \nreadiness for continuous deployment and DevOps.\nThe rest of the paper is structured as follows. Section II \nsummarizes the related work, Section III introduces our \nresearch method, Section IV presents the results, Section V \ndiscusses the results, and Section VII provides the conclusions\nfor the paper. \n \nII. RELATED WORK\nRapid customer feedback is one of the key benefits of a \ntransition to continuous development [2], [5], [7], [9]. This \nfeedback can be used to ensure that the developers are working \non functionality that really adds value for the customers via the \nproduct\nunder development. Benefits also\ninclude more \nfrequent releases which decreases the time to market with a \nnew product, and also the time features stay in the pipeline \nbefore they are released, effectively decreasing the lead-time of \nnew features [2], [7]. These benefits will eventually increase \nthe customer satisfaction, as the customer has a larger and more \nimmediate impact on the product [2]. Because the continuous \ndeployment pipeline relies heavily on testing, the quality of the \nsystem will improve over time, as fewer bugs are introduced \ninto the system [7]. The implementation of continuous \ndeployment should also bring some effort savings, as many of \nthe release related tasks, are being automated and manual tasks, \nsuch as configurations are being handled automatically and the \npool of resources can be released immediately after the task is \ncompleted. [12]. \nLaukkanen et al. [5] conducted a systematic review on \nproblems, causes and solutions when adopting continuous \ndelivery. They list seven themes of problems which the current \nliterature addresses. Five of them are related to software \ndevelopment activities such as integration and testing problems \n60\n2018 44th Euromicro Conference on Software Engineering and Advanced Applications\n978-1-5386-7383-6/18/$31.00 ©2018 IEEE\nDOI 10.1109/SEAA.2018.00019",
    "3": "and the two others are related to human and organisational \nissues and resource unavailability. Smeds et al. [11] report on \nDevOps adoption impediments in the industry. They include \nthe lack of clear definition of DevOps which can lead to \nunclear goals for DevOps adoption and if the goals are unclear, \nthey are also difficult to achieve. Customers might not want \nDevOps as they can be used to certain deployment and testing \nprocedures and it would mean that they too need to change \n[11]. Developers themselves might be against DevOps as they \nneed to learn new skills and knowledge and take new \nresponsibilities [11]. Technical impediments include having \nmonolithic architecture, development and testing environments \nnot reflecting production environment which creates a risk of \nnot being able to validate the software before it is deployed to \nproduction, and having multiple production environments [11].  \nIn other cases, there are external regulations which prohibits \nrapid releases, for example in the medical software domain, \nwhich is heavily regulated to ensure that a system does not\ncause human harm [6].\nIII. METHOD\nThe study reported in this paper was conducted in a large\nDanish software service house in two student projects \nsupervised by a researcher\nin fall 2017. The students \nparticipated a 5 ECTS research methodology course aimed at \nmaster level software engineering students at the University of \nSouthern Denmark. The first author was in charge over the \ncourse and the rest of the authors were students on the course \nplanning, conducting, analysing and reporting the study in the \nsupervision of the first author. The first author contacted a \nnumber of companies with a few topics related to software \nengineering and the company either picked the topic they were \nmost interested in or refused to participate. The first author then \ndiscussed with the company representative to find a relevant \nresearch question within the topic to be studied in the company. \nThe companies were selected from a pool of Danish companies \nthat had indicated their interest in working with software \nengineering students. The first author selected the research \napproach based on the research question and suitability in the \norganizational context (both a questionnaire and interview \nstudy in this case) and guided the participating companies by \nemail on how to pick suitable research participants among the \nstaff. The incentive for the participating companies was that \ncompanies got the student report of the studies they participated \nin and thus learned more about themselves and perhaps got \nsome suggestions on how to improve from the current state.\nThe students working in groups of three to four selected a \ntopic they wanted to investigate as their course project. The \nstudents created study plans including short literature reviews, \ninterview guides, and informed consent forms in the \nsupervision of the first author and had to have them approved \nby her before starting the data gathering. The students handled \nthe communication with the companies in the supervision of \nthe first author from there on. They also chose who they want \nto interview and agreed on the practicalities directly with the \ncompanies.\nThe objective of the research presented in this paper was to \nlearn about the challenges and how to overcome those in a \ncompany that is in transition from using Scrum and Kanban to \nmanage their agile software development\nto continuous \ndevelopment and DevOps. Our research questions were as \nfollows: \n1. What should a large company address when transitioning\ntowards continuous development and DevOps? \n2. What challenges can a large company face when \ntransitioning towards continuous development and DevOps\nand how to overcome those?\nTwo groups of students ran the research, each providing a \ndetailed research plan before starting the data gathering. One \ngroup planned and executed a web survey and the other a series \nof interviews in the collaborator company. The survey targeted \na section of 34 software professionals in the collaborator \ncompany. Four of them were picked for interviews based on\ninterest; two developers, a business architect and a tester. \nThe students audio recorded the individual interviews, an\nhour each, and transcribed them before analysing them \nthematically using NVivo. The survey target group consisted of\ndevelopers, testers, test managers, team leads, business \nspecialists and project managers. The survey was realized using \nSurveyXact. It was piloted with five software engineering \nstudents external to the student groups conducting the research\nfor improvement and feedback before sending it out to the \ncompany. The anonymous survey was available for the \nrespondents for two weeks and one remainder was sent in the \nmiddle. The mean completion time was 10 minutes. Ethical \nprocedures were based on WHO recommendations on \nqualitative research in both substudies.   \nRegarding validity and reliability of our research, we \nacknowledge that this paper reports a study conducted in only \none company with a limited number of participants from a \nsingle section of the company. However, based on related \nliterature and our experience we claim that many large software \norganizations are facing similar issues on their transition \ntowards modern software engineering practices. Therefore, we \nare confident that our work can be insightful to such \ncompanies. The juniority of the research teams can pose a \nthreat to research quality. To improve our research quality, we \nutilized method and researcher triangulation as the two groups \nutilized different methods and reviewed each other’s work.\nMoreover, we piloted the data gathering methods and the work \nwas conducted under supervision of a more experienced \nresearcher who also cross-checked both the thematic and \ndescriptive analyses. However, we acknowledge that some \nnuances and reasons behind the choices the company made \nremained unanswered\ndue to the inexperience of the \ninvestigators. The study would have benefited from a validating \nround of interviews or discussion over the findings with the \ncompany representatives. \nIV. RESULTS\nWe got 30 completed responses to the web survey with \nresponse rate of 88%. The job roles of the 30 web survey \nrespondents were as follows: 47% were software developers,\n13% testers, 13% business specialists, 7% team leads, 7% \nproject managers, 3% test managers, and 10% did not provide \ntheir role. The respondents had the following working \n61",
    "4": "experience in years with the studied company: 47% 0-4 years, \n7% 5-9 years, 13% 10-14 years, 13% 15-19 years, 13% 20 \nyears or more, and 7% did not provide an answer. Of the \nsurvey respondents, 17% had 0-5 years of working experience \nin total, 20% had 5-10 years, 17% 10-15 years, 30% 15-20 \nyears, 10% more than 20 years, and 7% did not answer the \nquestion. \nTwo of the four interviewees were senior software \ndevelopers, both with 3 years of working experience in the \ncompany. The two others were business architect and tester, \nboth employed in the company for 18 years.  \nA. Current Development Environment\nThe company had been utilizing agile methods for over a \ndecade. They had a company-wide development process based \non Scrum. They also utilized Kanban in some of their teams. \nThe company was interested in modern software development \napproaches such as continuous deployment and DevOps and \nthey were in transition towards utilizing those. However, as the \ncompany had thousands of employees in several countries and \nthey were running large customer projects, the transition was\nnot straightforward.\nThe current approach for software engineering was \ndescribed in the interviews as follows. Feature requests were\ngathered and handled by customer support. Development \norganization got those as product backlog items and prioritized \nthem based on internal parameters. Development organisation \nutilized cloud technologies such as IaaS, PaaS, and SaaS \n(Infrastructure, Platform, and Software as a Service) for build, \ntest, deployment and application management. They used Git \nfor version control. They also did continuous integration but \ndid not run all test to all Git commits. Deployment was done \nmanually by a separate operations organization that was\nresponsible for configuring and setting up production \nenvironments. Operations department also took care of\ndatabases, backups of software builds and reversing bad builds \nin case of errors in new software versions. Deployments to \nproduction were typically done once in a month and larger \nreleases were due quarterly.  \nB. Challenges in Adopting Continuous Deployment and \nDevOps\nThe interviewed business architect saw the current siloed\norganizational structure as the main barrier to adopting \nDevOps. The company had\nseparate development and \noperations organisations and they had been running into \ndifficulties and bureaucracy with utilizing competencies across \ndepartments. The business architect gave an example that \ndevelopers know how to setup a system, but only operations \nhave the rights to perform the setup. \nInterviewed developers mentioned that many of the \ncompany's products were running on legacy systems which do \nnot necessarily support continuous development. Changing \nplatforms to such that support a continuous development \nenvironment was not considered feasible as it would take a \nsignificant amount of time and resources. The company\nhowever implements all new systems development on \nplatforms that support modern software development. They \nhost their new projects on a cloud computing platform and plan \nto use it increasingly in the future. They also have changed \ntheir version control to Git as the old system was not \ncompatible with the selected cloud platform. Moreover, they\nhave improved their programming practices and standards to \nbetter support continuous development as guided by the cloud \ncomputing platform provider.\nWe asked in the survey how often the respondents \nexperience certain development and deployment related \nchallenges in their projects (fig. 1). ‘infrequent releases’ and \n‘time consuming to test’ were rather common as 36% and 28%\nof the respondents, respectively, reported experiencing those \neither ‘Often’ or ‘Always’. \nFigure 1 The proportion of respondents experiencing \ncertain challenges (y-axis) in software development at five-\nlevel scale of frequencies from never to always (N = 27).\nFigure 2 The percentage of respondents considering that\ncontinuous practice (y-axis) would help them to mitigate \ncertain problems in software development projects (N = \n30). C* is an abbreviation of continuous. \n62",
    "5": "C. Suggested Improvements for the Current Situation\nWe asked in the survey whether the participants considered \nthat given continuous practices (planning, integration, testing, \ndeployment, or monitoring) would help in resolving certain \nproblems software projects might encounter (merge conflicts, \nlong-running branches, build errors in commits, time-\nconsuming tests, or infrequent releases. Of the respondents, \n46% believed that continuous testing would reduce their \nchallenges with time-consuming tests while 29% believed that \ncontinuous deployment would help with infrequent releases \nwhich were the two most prevalent challenges for them (fig 1, \nfig 2). In addition, 25% of the respondents believed that \ncontinuous integration would help with merge conflicts and \nthat continuous planning would reduce long running branches.  \nV. DISCUSSION\nThe\nstudy \nparticipants \nsaw \nthe\nprevailing \nsiloed\norganisational structure and culture as a major blocker for the \nadoption of DevOps. Although the idea of DevOps – bringing\ndevelopment and operations together by enabling a cultural \nshift from siloed groups to cross-functional teams [3] – is \nbeautiful, it is difficult to realise in large companies. Bass [1]\nsuggests that in such cases, the cultural change can be started \nfrom individual level: “even if the adoption focuses on a single \ndevelopment team and a few operators, it is important that the \nDevOps culture is adopted by all people involved”. Following \nthis guideline, the company could bring together a bunch of \ninterested people and start learning and experimenting, \nchanging the culture together in a cross-functional team.\nHowever, the interviewees mentioned that the organization can \nbecome a barrier even for such small efforts with its rules and \nbureaucracy. They told about tasks that could be shared \nbetween roles in practice but that it cannot be done because it is \nagainst company policies.\nChen [2] states that their biggest challenge in adopting \ncontinuous delivery was organizational. They found it helpful \nwhen the leadership team restructured the organisation to break \ndown barriers between teams and promoted a collaborative \nculture. Gregory et al. [4] studied agile practitioners’ challenges \nand determined that organisation and culture are vast sources of \nchallenges. Laukkanen et al. [5] mention organisational \nstructure as a potential problem source in adopting continuous \ndelivery. However, they conclude that there is too little \nresearch evidence available on the phenomenon to discuss it \nfurther in their literature review. Also, Chen [2] acknowledges \nthe lack of research on introducing continuous delivery into an \norganisation. Thus, the topic obviously should be studied more \nto find ways to mitigate these challenges in large companies.\nOn development level, the participants felt that their most \nprevalent problems were related to infrequent releases and \nlengthy tests. They also saw that continuous practices could \nhelp them in overcoming these issues. The major barrier for \ntaking DevOps tools and automation into use was that the \nparticipants worked with legacy systems and the only feasible \nsolution in sight was to gradually replace those with new \nsystems with proper architecture. This is also what Leppänen et \nal. [7] suggest. Several companies they interviewed saw legacy \ncode as an obstacle that must be removed before adopting \ncontinuous deployment.\nVI. CONCLUSION\nThis paper presented an insight into the journey of a large \nsoftware service company towards continuous software \nengineering practices and DevOps. Many of the faced \nchallenges were related to the siloed organizational structure \nand legacy software. However, some of the presented \nchallenges could be mitigated by using continuous software \nengineering practices that should be implementable without \nchanging the organizational structure. However, as DevOps is \nlargely a cultural phenomenon, the organization must change \nsignificantly to gain its benefits. Adopting DevOps necessitates \norganizational learning, tearing down the siloes, automating the \ndeployment pipeline and tight coupling of development and \noperations. Essentially it is a major cultural change for a large \ncompany. \nACKNOWLEDGMENT\nWe want to express our gratitude to the company contact \nperson and all the interviewees and survey respondents in the \ncompany for their dedication and time.\nREFERENCES\n[1]\nBass, L., Weber, I., & Zhu, L. (2015). DevOps: A Software Architect's \nPerspective. Addison-Wesley Professional.\n[2]\nChen L. 2015. Continuous Delivery: Huge Benefits, but Challenges Too. \nIEEE Software 32, 2 (Mar 2015), 50–54. \n[3]\nEbert, C., Gallardo, G., Hernantes, J., & Serrano, N. (2016). DevOps. \nIEEE Software, 33(3), 94-100.\n[4]\nGregory, P., Barroca, L., Sharp, H., Deshpande, A., & Taylor, K. (2016). \nThe challenges that challenge: Engaging with agile practitioners’ \nconcerns. Information and Software Technology, 77, 92-104.\n[5]\nLaukkanen, E. Itkonen, J. and Lassenius,  C. 2017. Problems, causes and \nsolutions when adopting continuous delivery - A systematic literature \nreview. Information and Software Technology 82, Supplement C (2017), \n55 – 79. https: //doi.org/10.1016/j.infsof.2016.10.001\n[6]\nLaukkarinen, T., Kuusinen, K., & Mikkonen, T. (2018). Regulated \nsoftware meets DevOps. Information and Software Technology, 97, 176-\n178.\n[7]\nLeppänen, M., Mäkinen, S., Pagels, M., Eloranta, V. P., Itkonen, J., \nMäntylä, M. V., & Männistö, T. (2015). The highways and country roads\nto continuous deployment. IEEE software, 32(2), 64-72.\n[8]\nLwakatare, L. E., Kuvaja, P., & Oivo, M. (2015). Dimensions of devops. \nIn International Conference on Agile Software Development (pp. 212-\n217). Springer, Cham.\n[9]\nOlsson, H. H., Alahyari, H., & Bosch, J. (2012, September). Climbing \nthe\" Stairway to Heaven\"--A Mulitiple-Case Study Exploring Barriers in \nthe \nTransition \nfrom \nAgile\nDevelopment \ntowards \nContinuous \nDeployment of Software. In Software Engineering and Advanced \nApplications (SEAA), 2012 38th EUROMICRO Conference on (pp. 392-\n399). IEEE.. \n[10] 3D]XU\u0003 $QLþLü\u000f\u0003 .\u0011\u000f\u0003 'LYMDN\u000f\u0003 %\u0011\u000f\u0003 \t\u0003 $UEDQDV\u000f\u0003 .\u0011\u0003 \u000b\u0015\u0013\u0014\u001a\f\u0011\u0003 3UHSDULQJ\u0003 ,&7\u0003\nGraduates for Real-World Challenges: Results of a Meta-Analysis. IEEE \nTransactions on Education, 60(3), 191-197.\n[11] Smeds, J., Nybom, K., & Porres, I. (2015, May). DevOps: a definition \nand perceived adoption impediments. In International Conference on \nAgile Software Development (pp. 166-177). Springer, Cham.\n[12] Virmani, M. (2015). Understanding DevOps & bridging the gap from \ncontinuous integration to continuous delivery. In Innovative Computing \nTechnology (INTECH), 2015 Fifth International Conference on (pp. 78-\n82). IEEE.  \n63\nView publication stats"
  },
  "tables": {
    "1": [
      [
        [
          "See discussions, stats, and author profiles for this publication at: https://www.researchgate.net/publication/328454982\nA Large Agile Organization on Its Journey Towards DevOps\nConference Paper · August 2018\nDOI: 10.1109/SEAA.2018.00019\nCITATIONS READS\n38 1,087\n8 authors, including:\nKati Kuusinen Sune Chung Jepsen\nTechnical University of Denmark University of Southern Denmark\n40 PUBLICATIONS 649 CITATIONS 14 PUBLICATIONS 112 CITATIONS\nSEE PROFILE SEE PROFILE\nAdmir Muric\nUniversity of Southern Denmark\n2 PUBLICATIONS 44 CITATIONS\nSEE PROFILE",
          null
        ],
        [
          "All content following this page was uploaded by Admir Muric on 18 February 2019.\nThe user has requested enhancement of the downloaded file.",
          ""
        ]
      ]
    ],
    "5": [
      [
        [
          "Bass, L., Weber, I., & Zhu, L. (2015). DevOps: A Software Architect's"
        ],
        [
          "Perspective. Addison-Wesley Professional."
        ],
        [
          "Chen L. 2015. Continuous Delivery: Huge Benefits, but Challenges Too."
        ],
        [
          "IEEE Software32, 2 (Mar 2015), 50–54."
        ],
        [
          "Ebert, C., Gallardo, G., Hernantes, J., & Serrano, N. (2016). DevOps."
        ],
        [
          "IEEE Software, 33(3), 94-100."
        ],
        [
          "Gregory, P., Barroca, L., Sharp, H., Deshpande, A., & Taylor, K. (2016)."
        ],
        [
          "The challenges that challenge: Engaging with agile practitioners’"
        ],
        [
          "concerns. Information and Software Technology, 77, 92-104."
        ],
        [
          "Laukkanen,E. Itkonen,J. and Lassenius, C. 2017. Problems, causes and"
        ],
        [
          "solutions when adopting continuous delivery - A systematic literature"
        ],
        [
          "review. Information and Software Technology82, Supplement C (2017),"
        ],
        [
          "55 – 79. https: //doi.org/10.1016/j.infsof.2016.10.001"
        ],
        [
          "Laukkarinen, T., Kuusinen, K., & Mikkonen, T. (2018). Regulated"
        ],
        [
          "software meets DevOps. Information and Software Technology, 97, 176-"
        ],
        [
          "178."
        ],
        [
          "Leppänen, M., Mäkinen, S., Pagels, M., Eloranta, V. P., Itkonen, J.,"
        ],
        [
          "Mäntylä, M. V., & Männistö, T. (2015). The highways and country roads"
        ],
        [
          "to continuous deployment. IEEEsoftware, 32(2), 64-72."
        ],
        [
          "Lwakatare, L. E., Kuvaja, P., & Oivo, M. (2015). Dimensions of devops."
        ],
        [
          "In International Conference on Agile Software Development (pp. 212-"
        ],
        [
          "217). Springer, Cham."
        ],
        [
          "Olsson, H. H., Alahyari, H., & Bosch, J. (2012, September). Climbing"
        ],
        [
          "the\" Stairway to Heaven\"--A Mulitiple-Case Study Exploring Barriers in"
        ],
        [
          "the Transition from Agile Development towards Continuous"
        ],
        [
          "Deployment of Software. In Software Engineering and Advanced"
        ],
        [
          "Applications (SEAA), 2012 38th EUROMICRO Conference on (pp. 392-"
        ],
        [
          "399). IEEE.."
        ],
        [
          "(cid:51)(cid:68)(cid:93)(cid:88)(cid:85)(cid:3)(cid:36)(cid:81)(cid:76)(cid:254)(cid:76)(cid:252)(cid:15)(cid:3)(cid:46)(cid:17)(cid:15)(cid:3)(cid:39)(cid:76)(cid:89)(cid:77)(cid:68)(cid:78)(cid:15)(cid:3)(cid:37)(cid:17)(cid:15)(cid:3)(cid:9)(cid:3)(cid:36)(cid:85)(cid:69)(cid:68)(cid:81)(cid:68)(cid:86)(cid:15)(cid:3)(cid:46)(cid:17)(cid:3)(cid:11)(cid:21)(cid:19)(cid:20)(cid:26)(cid:12)(cid:17)(cid:3)(cid:51)(cid:85)(cid:72)(cid:83)(cid:68)(cid:85)(cid:76)(cid:81)(cid:74)(cid:3)(cid:44)(cid:38)(cid:55)"
        ],
        [
          "Graduates for Real-World Challenges: Results of a Meta-Analysis.IEEE"
        ],
        [
          "Transactions on Education, 60(3), 191-197"
        ],
        [
          "Smeds, J., Nybom, K., & Porres, I. (2015, May). DevOps: a definition"
        ],
        [
          "and perceived adoption impediments. In International Conference on"
        ],
        [
          "Agile Software Development(pp. 166-177). Springer, Cham."
        ],
        [
          "Virmani, M. (2015). Understanding DevOps & bridging the gap from"
        ],
        [
          "continuous integration to continuous delivery. In Innovative Computing"
        ],
        [
          "Technology (INTECH), 2015 Fifth International Conference on (pp. 78-"
        ],
        [
          "82). IEEE."
        ]
      ]
    ]
  },
  "images": {
    "1": [
      {
        "filename": "page_1_image_1.jpeg",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_1_image_1.jpeg",
        "extraction_date": "2025-01-19T15:46:18.178944",
        "page_number": 1,
        "image_index": 1,
        "width": 64,
        "height": 64
      },
      {
        "filename": "page_1_image_2.jpeg",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_1_image_2.jpeg",
        "extraction_date": "2025-01-19T15:46:18.182417",
        "page_number": 1,
        "image_index": 2,
        "width": 64,
        "height": 64
      },
      {
        "filename": "page_1_image_3.jpeg",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_1_image_3.jpeg",
        "extraction_date": "2025-01-19T15:46:18.185424",
        "page_number": 1,
        "image_index": 3,
        "width": 50,
        "height": 50
      }
    ],
    "2": [
      {
        "filename": "page_2_image_1.jpeg",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_2_image_1.jpeg",
        "extraction_date": "2025-01-19T15:46:18.188849",
        "page_number": 2,
        "image_index": 1,
        "width": 150,
        "height": 89
      }
    ],
    "4": [
      {
        "filename": "page_4_image_1.png",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_4_image_1.png",
        "extraction_date": "2025-01-19T15:46:18.251404",
        "page_number": 4,
        "image_index": 1,
        "width": 1058,
        "height": 992
      },
      {
        "filename": "page_4_image_2.png",
        "path": "output\\images\\temp_65deb165-966e-4948-9d23-350ca4d9d633\\page_4_image_2.png",
        "extraction_date": "2025-01-19T15:46:18.290168",
        "page_number": 4,
        "image_index": 2,
        "width": 1058,
        "height": 638
      }
    ]
  }
}