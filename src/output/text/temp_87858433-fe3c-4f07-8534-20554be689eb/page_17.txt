The ability to use Git to contribute changes is very powerful because it allows you to
improve the software that is used by many other scientists and also potentially shape the future
direction of its development.
Conclusion
Git, albeit complicated at first, is a powerful tool that can improve code development and docu-
mentation. Ultimately, the complexity of a VCS not only gives users a well-documented
“undo” button for their analyses, but it also allows for collaboration and sharing of code on a
massive scale. Furthermore, it does not need to be learned in its entirety to be useful. Instead,
you can derive tangible benefits from adopting version control in stages. With a few commands
(git init, git add, git commit), you can start tracking your code development and
avoid a file system full of copied files (Fig 2). Adding a few additional commands (git push,
git clone, git pull) and a GitHub account, you can share your code online, transfer your
changes across machines, and collaborate in small groups (Fig 3). Lastly, by forking public
repositories and sending pull requests, you can directly improve scientific software (Fig 4).
Methods
We collaboratively wrote the article in LaTeX (http://www.latex-project.org/) using the online
authoring platform Authorea (https://www.authorea.com). Furthermore, we tracked the devel-
opment of the document using Git and GitHub. The Git repo is available at https://github.
com/jdblischak/git-for-science, and the rendered LaTeX article is available at https://www.
authorea.com/users/5990/articles/17489.
Supporting Information
S1 Data. process.sh. This Bash script downloads the ENCODE CTCF ChIP-seq data from
multiple types of kidney samples and calls peaks. See https://github.com/jdblischak/git-for-
science/tree/master/code for instructions on running it.
(SH)
S2 Data. clean.py. This Python script filters peaks with a fold change cutoff and merges peaks
from the different kidney samples. See https://github.com/jdblischak/git-for-science/tree/
master/code for instructions on running it.
(PY)
S3 Data. analyze.R. This R script creates diagnostic plots on the length of the peaks and their
distribution across the genome. See https://github.com/jdblischak/git-for-science/tree/master/
code for instructions on running it.
(R)
References
1.
Ram K. Git can facilitate greater reproducibility and increased transparency in science. Source Code
Biol Med. 2013 Feb; 8:7. doi: 10.1186/1751-0473-8-7 PMID: 23448176
2.
Wilson G, Aruliah D, Brown C, Chue HN, Davis M, Guy R, et al. Best practices for scientific computing.
PLoS Biol. 2014 Jan; 12:e1001745. doi: 10.1371/journal.pbio.1001745 PMID: 24415924
3.
ENCODE Project Consortium, Bernstein B, Birney E, Dunham I, Green E, Gunter C, et al. An integrated
encyclopedia of DNA elements in the human genome. Nature. 2012 Sep; 489:57–74. doi: 10.1038/
nature11247 PMID: 22955616
4.
Bailey T, Krajewski P, Ladunga I, Lefebvre C, Li Q, Liu T, et al. Practical guidelines for the comprehen-
sive analysis of ChIP-seq data. PLoS Comput Biol. 2013 null; 9:e1003326. doi: 10.1371/journal.pcbi.
1003326 PMID: 24244136
PLOS Computational Biology | DOI:10.1371/journal.pcbi.1004668
January 19, 2016
17 / 18