Figure 4 shows the commit ﬂow of master and non-master
branches. In Figure 4(a), we ﬁnd that on the whole situation,
the percentage of commits which are left on the non-master
branches is very low. It seems that at least 75% branches’ all
commits are almost contained in master branches (with at most
0.56% commits are not included in the master branch). We fur-
ther ﬁnd that 50% branches have only one commit that is not
in master branches; and about 40% (6,460/16,466) branches’
all commits go into their master branches. In Figure 4(b), we
observe that the minimum value of the boxplot is also 0, which
means there are branches (actually 373 branches from 278
projects) containing all commits from their master branches.
From the 50% quantile value, we can ﬁnd that, nearly 25%
commits of half master branches are not contained in their
non-master branches, which is much more than the number
(0.7%) of commits unique to a non-master branch. Comparing
quantile values of Figure 4(a) with those of Figure 4(b), we
can ﬁnd that master branches always have many more commits
that are not in non-master branches.
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●●
●
●●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
●
0.00
0.01
0.02
0.03
0.04
0.05
Unique Commits in Non−master Branches
Percent
(a) non-master branches
0.00
0.25
0.50
0.75
1.00
Unique Commits in Master Branches
Percent
(b) master branches
Fig. 4. Commit ﬂow of master and non-master branches
Finding 5. Almost all commits of most branches (>75%)
ﬁnally ﬂow into their master branches. In comparison, more
than 97% branches (16,093/16.466=97.7%) do not include
all commits from their master branches.
Implications. From the results of RQ4, we ﬁnd that some
commits only belong to non-master branches or master
branches. For those unique commits, it would be helpful if
some techniques can be proposed to summarize these unique
commits and provide supportive information to further indicate
what is going on in each branch. In this way, developers
working on either non-master branches or master branches
can feel more free to merge work from other branches without
unnecessary conﬂicts or duplicate work.
E. RQ5: Does branch usage affect the overall productivity of
a project?
Branching is a method that can help developers focus
on their own development task without hindering, or being
hindered by others. In this way, we assume that branching may
facilitate development. To our best knowledge, the impact of
branch usage on development in large OSS communities has
not been studied. In this RQ, we quantitatively measure the
impact of branch usage on the overall productivity of projects.
Our experiment includes two parts. The ﬁrst part studies
the impact of branches used on project’s productivity. The
second part investigates whether the results are different
between personal projects and organization-based projects.
We use a multiple linear regression model to measure the
impact of branch usage on project’s productivity. Since code
contributions are always encompassed in the form of commits,
the number of commits is used as a proxy measure of
developers’ productivity [13]. Following existing studies [51],
[17], [50], we also use the commit count to measure projects’
productivity. Speciﬁcally, we use the number of commits
within master branch as a proxy of a project’s productivity
and use the number of branches as a proxy of branch usage.
We aim to discover whether the more branches are used,
the more likely a project will have more commits on the
master branch. Since there are other factors (such as project
popularity and developers’ interaction) that can also affect
project’s productivity, we also use other eight factors listed
in Table II as confounding factors.
As mentioned in Section III, we use Cohen’s f 2 to measure
the effect size of branch usage on a project’s productivity. To
measure effect size, we ﬁrst build a model with all explanatory
variables, i.e., the factor brCnt (the number of branches) and
other eight confounding factors. Then we build another model
with only eight confounding factors. We use each models’
Adjusted R-squared to calculate the Cohen’s f 2 as the
branches’ effect size on each project’s productivity.
Since some explanatory variables have large numeric scales,
we performed log transformation on them and outliers are
removed. The residual distribution is found to have acceptable
normality and the variance inﬂation is also within recommend-
able ranges [25].
Table IV and Table V show the results of two models. From
the two tables, we can ﬁnd that the project’s ﬁnal productivity
(i.e., the number of commits) increases with the number of
branches, developers, PRs, issue comments and project age;
the ﬁnal productivity decreases with the number of forks and
watchers of projects.
As can be seen in Table IV and Table V, the R2 for
models that includes and excludes brCnt is separately 0.625
and 0.616. Thus the Cohen’s
f 2 is (0.625-0.616)/(1-
0.625)=0.024. Since 0.024 is bigger than the minimum value
0.02 for a small effect but smaller than the minimum value
0.15 for the median effect, we can conclude that the branch
usage does have a positive effect on project’s productivity,
although the effect is small.
Finding 6. The number of branches used within a project
has a positive impact on a project’s productivity, despite of
a small effect measured by Cohen’s effect size. This means,
to some extent, the more branches a project has, the more
ﬁnal commits a project has.
After examining the effect of branch usage on project pro-
ductivity on all 2,923 projects, we further investigate whether
the effect is different between projects owned by personal
users and by organizations. We divide 2,923 projects into two
groups: personal projects and organizational projects. There
are 1,891 personal projects and 1,032 organizational projects,
313
Authorized licensed use limited to: Nanjing University. Downloaded on May 20,2020 at 13:25:16 UTC from IEEE Xplore.  Restrictions apply.