Future Internet 2022, 14, 63
10 of 14
Table 4. Comparative analysis of beneﬁts and ranking.
Beneﬁt
CS1
CS2
CS3
CS4
CS5
CS6
CS7
CS8
CS9
CS10
CS11
CS12
Ranking
BF1
X
X
X
X
#3
BF2
X
X
X
X
X
X
X
X
#1
BF3
X
X
X
X
X
#2
BF4
X
X
X
#4
BF5
X
X
#5
BF6
X
X
#5
BF7
X
#10
BF8
X
#10
BF9
X
X
#5
BF10
X
X
#5
BF11
X
#10
BF12
X
X
#5
5. Discussion
Although Agile and DevOps are widespread and different concepts, they can be
combined and offer relevant beneﬁts to organizations. As reported in [45], companies have
problems in the process of implementing and releasing new software versions because most
of the time this is a process performed manually. In addition, this approach leads to a high
quantity and frequency of errors [46]. To reduce the incidence of problems and increase
ﬂexibility and automation, non-operational resources can be used and in environments that
are not in production. The combined adoption of Agile and DevOps allows the developer
to gain greater control over the environment, infrastructure, and applications.
The seamless integration between Agile and DevOps generates a more collaborative
and Agile framework. This approach leads to a simpliﬁcation and automation of model
processes to make them more rational and efﬁcient. A classic example of this beneﬁt is
given by Fabro [47] when highlighting the reduction in delivery cycles, endowing small
development packages with a previously unrecognized value. Hemon-Hildgen et al. [48]
also highlight the role of orchestration, which consists of automating tasks to optimize
the process and reduce repetitive steps that add little to the development cycle. Finally,
automated testing along the Agile and DevOps chain allows the reuse of tests between
environments and makes them more sustainable [49].
Team communication is recognized in DeFranco and Laplante [50] and Schmutz
et al. [51] as the main cause for product delivery failures. By starting to work together, teams
can more easily track the evolution of processes from their inception, which fosters the
emergence of process improvements. Cois et al. [52] recognize that the great differentiator
of DevOps lies in its ability to optimize communication between the teams involved and the
customer. This allows, for example, the team to involve the operations team, which enables
the implementation of the ITOps model [53]. This enables it to provide a sufﬁciently secure
development environment. However, interconnecting it with an organization’s Agile teams
offers more potential. For example, the marketing and sales departments can be involved
in the activities covering the delivery of the releases, which allows companies to add even
more value to the product by using the full potential of their available resources.
The ﬁndings further revealed a very diverse number of beneﬁts, such as increased
visibility over processes, better identiﬁcation and mitigation of risks, or increased software
quality. The integration of the two paradigms fosters consolidation, which allows project
managers to have greater visibility of both the work of the teams and the interdependencies
between them [54]. Furthermore, iterative planning between teams makes it easier to adapt
in case of changes, and continuous customer feedback generates value from the beginning
of the project, lowering the risks associated with development and operation [55]. In the
joint Agile and DevOps paradigm, both teams share responsibility for producing functional
and quality code and need to work together to achieve these common goals.