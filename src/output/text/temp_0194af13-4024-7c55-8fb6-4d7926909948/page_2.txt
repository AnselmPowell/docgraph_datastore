A Large Agile Organization on its Journey towards 
DevOps
Kati Kuusinen, Veena Balakumar, Sune Chung Jepsen, Simon Hjortshøj Larsen, 
Thomas August Lemqvist, Admir Muric, Anna Ølgaar Nielsen, and Oliver Vestergaard
University of Southern Denmark  
Odense, Denmark
kaku@mmmi.sdu.dk, 
{vebal13, sujep06, sila114, thlem14, admur13, annni17, olves13}@student.sdu.dk
Abstract—Software companies are increasingly adopting
DevOps and
continuous software engineering practices to 
support short feedback loops, gain better control and visibility 
over deployments, and decrease the need for manual work with 
the help of automated processes. While adopting DevOps
practices can lead to various benefits, companies also face many 
kinds of challenges in the transition. This short paper presents 
the results of a case study conducted in a large Danish software 
service house about their experiences of transitioning towards 
DevOps. We got 30 completed survey responses and interviewed 
four persons in software engineering related roles. We present 
the current state of the company with challenges and suggestions 
to improvement. To reach DevOps, the company will need a 
major cultural change. However, the respondents were positive
that the adoption of continuous software engineering practices 
would mitigate some of their prevailing challenges. 
Keywords—DevOps, 
continuous 
development, 
large 
organisation
I. INTRODUCTION
DevOps integrates software development and operations 
[3]. It is characterized by tight coupling of development and 
operations functions, automation of development, deployment 
and monitoring, and performance measurement [3, 8]. The 
benefits DevOps can provide include fast and continuous value 
delivery, improved communication, and accelerated problem 
solving [3]. DevOps relies on automated deployment pipeline 
that consists of continuous integration (CI), test automation, 
and release automation [12]. The benefits of the automated 
pipeline include minimizing manual repetitive work and being 
able to release whenever working software has been developed 
which again leads to getting rapid user and customer feedback, 
i.e. learning fast [2]. Short learning loops are a core goal of lean 
and agile software development as they let the developers to 
fail fast and create value fast and frequently. 
Companies are adopting DevOps and continuous software 
engineering practices to gain these benefits and be more able to 
compete on the market [2]. Also, as there is an increasing 
shortage of professional software developers in the market [10],
improving their efficiency by removing repetitive manual work 
is essential. However, updating the software engineering of a 
large 
company 
into 
these 
modern 
practices 
is 
not 
straightforward. Typically, it is more complicated to adopt 
continuous delivery in larger companies with many roles with 
their individual responsibilities and specialized departments 
[2]. Continuous delivery adoption is therefore highly dependent 
on the company structure.  
This paper describes the current state of a large software 
service company and the challenges it is facing from early on 
its journey towards DevOps. The paper also addresses how
adopting continuous software engineering practices could
mitigate their challenges and how they can improve their 
readiness for continuous deployment and DevOps.
The rest of the paper is structured as follows. Section II 
summarizes the related work, Section III introduces our 
research method, Section IV presents the results, Section V 
discusses the results, and Section VII provides the conclusions
for the paper. 
 
II. RELATED WORK
Rapid customer feedback is one of the key benefits of a 
transition to continuous development [2], [5], [7], [9]. This 
feedback can be used to ensure that the developers are working 
on functionality that really adds value for the customers via the 
product
under development. Benefits also
include more 
frequent releases which decreases the time to market with a 
new product, and also the time features stay in the pipeline 
before they are released, effectively decreasing the lead-time of 
new features [2], [7]. These benefits will eventually increase 
the customer satisfaction, as the customer has a larger and more 
immediate impact on the product [2]. Because the continuous 
deployment pipeline relies heavily on testing, the quality of the 
system will improve over time, as fewer bugs are introduced 
into the system [7]. The implementation of continuous 
deployment should also bring some effort savings, as many of 
the release related tasks, are being automated and manual tasks, 
such as configurations are being handled automatically and the 
pool of resources can be released immediately after the task is 
completed. [12]. 
Laukkanen et al. [5] conducted a systematic review on 
problems, causes and solutions when adopting continuous 
delivery. They list seven themes of problems which the current 
literature addresses. Five of them are related to software 
development activities such as integration and testing problems 
60
2018 44th Euromicro Conference on Software Engineering and Advanced Applications
978-1-5386-7383-6/18/$31.00 ©2018 IEEE
DOI 10.1109/SEAA.2018.00019