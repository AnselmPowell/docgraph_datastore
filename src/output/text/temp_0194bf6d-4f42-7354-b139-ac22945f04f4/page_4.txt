showcase and analyze the data for each research question.
In Section 7 we
answer our RQs and provide several future research paths based of this work.
Section 8 discusses the threats to the validity of our work. Finally, Section 9
presents our conclusions and future work.
2
Related work
In this section, we introduce our related work. This paper’s related work focuses
on several articles that mine software repositories to understand and improve
aspects of software development. Similarly to these works, we mine repositories
related to the CI/CD.
Xu et al. [Xu and Marinov(2018)] introduce the idea of mining container
image repositories for configuration and other deployment information of soft-
ware systems. The authors also showcase the opportunities based on concrete
software engineering tasks that can benefit from mining image repositories.
They also summarize the challenges of analyzing image repositories and the
approaches that can address these challenges. These authors focus their work
on technologies for deployment, while with our work we give a broader overview
of the usage of CI/CD technologies.
Wu et al. [Wu et al.(2020)] present a preliminary study on 857,086 Docker
builds from 3,828 open-source projects hosted on GitHub. Using the Docker
build data, the authors measure the frequency of broken builds and report their
fix times. They also explore the evolution of Docker build failures across time.
This work is focused on a particular technology, whilst ours covers many.
Zahedi et al. [Zahedi et al.(2020)] present an empirical study exploring con-
tinuous software engineering from the practitioners’ perspective by mining dis-
cussions from Q&A websites. The authors analyzed 12,989 questions and an-
swers posted on Stack Overflow. The authors then used topic modeling to derive
the dominant topics in this domain. They then identify and discuss key chal-
lenges. Although the studied topic is related to CI/CD, we analyzed concrete
software projects.
Mazrae et al. [Rostami Mazrae et al.(2023)] present a qualitative study of
CI/CD technologies usage, co-usage, and migration based on in-depth inter-
views. They identify reasons for the use of specific technologies, reasons for
co-usage of CI/CD technologies in the same project, and migrations executed
by the interviewees. Their study reveals a clear trend in migration from Travis
to GitHub Actions. We have used a very different source of data, but some of
the conclusions of our study are in line with Mazrae et al.
Goldazeh et al. [Golzadeh et al.(2022)] conduct a qualitative analysis of the
usage of seven popular CI technologies in the GitHub repositories of 91m810
active npm packages having used at least one CI service over a period of nine
years. Their findings include the fall of Travis, the rapid rise of GitHub Actions,
and the co-usage of multiple CI technologies. These results are in line with ours,
but we have investigated many more projects and CI/CD technologies.
Liu et al. [Liu et al.(2023)] mine 84,475 open-source Android applications
4