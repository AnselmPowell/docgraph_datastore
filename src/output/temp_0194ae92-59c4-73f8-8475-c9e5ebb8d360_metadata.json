{
  "metadata": {
    "filename": "temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360",
    "extraction_date": "2025-01-28T20:20:26.814039",
    "path": "research_assistant\\data\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360.pdf"
  },
  "pages": {
    "1": "www.ijcrt.org                                                                 © 2017 IJCRT | Volume 5, Issue 3 August 2017 | ISSN: 2320-2882 \nIJCRT1133441 \nInternational Journal of Creative Research Thoughts (IJCRT) www.ijcrt.org \n946 \n \nDevOps automation and Agile methodology  \nSikender Mohsienuddin Mohammad \nSr. Associate, KPMG LLP, Department of Information Technology, Wilmington University \n419 V street, Apt D, Sacramento, CA 95818 \n \nAbstract \nIn recent times, interest in the collaboration between \ntechnology and IT activities which is part of the DevOps \nphenomenon has been on the rise among, software-engineering, \npractitioners, and scientists. However, DevOps is also associated \nwith agile as well as continuous software development delivery \napproaches, given its increasing importance. The study of \nDevOps follows which are the roots, acceptance, integration, and \npriorities with agile, lean, and ongoing delivery strategies in \nsoftware development.   DevOps phenomenon was influenced by \nthe development of agile software, based on lean principles. \nSuccessful DevOps deployment needs the agile development of \nsoftware. DevOps is end-to-end automation in developing and \ndelivering software. No one could approach it with a cookbook-\nlike approach, but most developers would benefit from improving \nconnectivity between previously isolated creation and activity \nsilos. Even though agile software development methodologies are \nmore and more common, many organizations have discovered \nthat they have not reached a frequent release rate, largely \nbecause of the various departmental features in silos. \nOrganizations have shifted towards DevOps to remove these silos. \nCompanies are increasingly introducing DevOps as digitizations \ncontinue. There are three different phases of the agile transition \nto DevOps: agile, ongoing integration, and constant delivery. \nBased on a comprehensive case study done in an enterprise with \na long background of DevOps, we detect a fundamental \ndisturbance in the soft ability and patterns of communication that \nsoftware teams are supposed to possess.  \nKeywords: \nDevOps, \nAutomation, \nsoftware \nengineering, \nconfiguration management, agile methodology \nI. \n INTRODUCTION \nThe \ndistinctions \nbetween \nDevOps \nand \nAgile \nmethodologies are very confusing. That is partly because many \nmarketers define these terms loosely which waters down the exact \nmeaning.  But it is not just marketing ambiguity that leads to the \nmisunderstanding and confusion of concepts. It also adds to the \nmisunderstanding that DevOps and Agile concentrate on \nprinciples rather than practical activities [1]. A software project \ninvolves the execution of tasks to achieve added value outcomes. \nThe planning, implementation, and monitoring of these tasks \nwould be the main function that project management plays. The \nbusiness environment nowadays in terms of software & product \ndesign has evolved more rapidly. Project planning, evaluation, \nmanagement of improvements, and quality control are some of \nthe challenges that differentiate successful and failed projects. \nAgile methods are widely used and implemented worldwide to \ndeal with these issues [1]. More software developers concentrate \non agile development, thereby increasing the productivity of their \nprojects and meeting the competitive demands of their customers. \nAgile methodology has been developed to address the problems \nfaced by the conventional model and to offer project teams \nmultiple possibilities during the development process. The \nmethodologies for software development are changing and thus \ntheir application development is handled in short times (sprints) \nand other involving team members are modified through \nagile and DevOps methodologies [2]. This study will be focused \non \na \nqualitative \nanalysis \nof DevOps \nand \nagile \nmethodology responses.  The main focus will be to conduct a \nliterature review on what other scholars have discovered when it \ncomes to DevOps automation and Agile methodology and its \nimpact on the current information technology industry. With this \nin mind, DevOps contributes to a greater understanding of the \nefficiency of information systems. \nII. \nLITERATURE REVIEW  \nAn analysis was done by Laanti, Salo, and Abrahamsson, \nAgile and DevOps are buzzing ideas that are commonly used by \nmany organizations, but there is always an often overlap or \nambiguity between the two [2]. Only one business model has \nemerged in software development, but they are implemented \nbeyond software development to the organizational units. These \napproaches are not the same but are not enemies either. The use \nof Agile and DevOps in tandem is always the appropriate \napproach in a team, department, or entity to achieve change. To \naccept these theories requires being versatile on how they change \ncontinuously and to know that no one solution can solve all \norganizational needs. \nI. \nAn Agile methodology \nLaanti, Salo, and Abrahamsson state that as software developers \nare aware of the immediate limitations of heavy-weight processes \nsuch as the Waterfall method, they are searching for a way to \nsimplify and make tweaking of software more agile [2]. They \nhave decided to give end-user input more chances to ensure they \nare on the right track. In the 1990s a large number of lightweight \ntheories, including the famous Scrum and Kanban methods, were \ndeveloped for software development. In 2001, the Agile Software \nDevelopment Manifesto codified many of these concepts and put \nthem within the framework of the advancement of agile software. \nAccording to Pedrycz, agile methodologies value the following: \na) People-especially the teammates, clients, and their \ninteractions — rather than tools and processes [3]. \nb) Immediacy-Functional \napplications instead \nof comprehensive documentation. \nc) Flexibility-To responds to and embraces change, rather \nthan to a predetermined plan. \nElectronic copy available at: https://ssrn.com/abstract=3655581",
    "2": "www.ijcrt.org                                                                 © 2017 IJCRT | Volume 5, Issue 3 August 2017 | ISSN: 2320-2882 \nIJCRT1133441 \nInternational Journal of Creative Research Thoughts (IJCRT) www.ijcrt.org \n947 \n \nThe agile methodology also weakens the concept of a \"finished \nproduct,\" which was the main objective of the Waterfall approach. \nAgile considers the fact that software development should be \niterative and incremental. This means that the customer can \nexecute new features or improve the existing functions on each \nnew software launch. Agile methodologies allow designing \nsoftware to break down into manageable parts called \"user \nstories.\" Pedrycz suggests that this underline Agile 's value for the \nconsumer, allowing developers to deliver quicker input loops and \nmaintain product compatibility with business needs [3]. Agile also \nsupports adaptive planning, evolving development, early and on-\ngoing delivery, and constant improvement to enable developers \nto respond quickly and flexibly to customer needs, software, and \nother external factors. \nII. \nThe Modern DevOps \nAgile was a response to the approaches in waterfall \nmethodologies, but DevOps was not an answer to Agile. Both \nhypotheses are not the same – because businesses have started to \nsee connections and improved performance and efficiency when \nused in tandem. Two important areas were known as IT \noperations (ITOps) and Development Operations (DevOps), \nwhich are essential for businesses in the modern era. ITOP 's \nfunctions include guaranteeing safety, compliance, and reliability \nwhile DevOps is in charge of designing and delivering end-user \nwith new products. Even as ITOps provides reliability and safety \nfor all customer needs via the network, DevOps goes hand in hand \nwith flexibility and thorough analysis and communication with \nthe \nimplementation \nof \nnew \nsoftware. \n \nFig i: DevOps continuous delivery life cycle \nAgile and DevOps are fused [3]. \nPedrycz states that in the past decade, firms have tried \nturning from their original IT team to the specific DevOps group \nor introducing an agile methodology to their software \ndevelopment projects [3]. Multiple relationships between these \ntwo concepts surfaced through these changes in the organization. \nAgile Teams are focused on automated design, test automation, \nContinuous Integration (CI). According to Forsgren and Humble \nDevOps teams frequently need to use these tools, as well as \nmetrics and monitoring systems, configuration management, \nvirtualization, and cloud computing [4]. Agile looked like a whole \nnew paradigm for software developers who were disappointed by \nthe limitations of a waterfall approach. However Agile is not \nperfect according to Forsgren and Humble.   Common \ndisadvantages to Agile planning involve missed deadline, \ncompleted elements which, owing to separated scrum or groups, \nare incompatible with each other and additional features splitting \nold features – due to the lack of coordination with DevOps and \nITOps[4]. All these issues are related to Agile development by \none thing: the breakdown in communication. \nForsgren and Humble also suggest that DevOps fills the \ngap in this case. DevOps is a communications theory, both within \nitself and across other departments, because developers and \noperators need to coordinate [4]. DevOps works regularly with \nITOps to maintain secure and stable testing environments so it \nmakes sense to turn to other departments such as marketing so \ncustomer service by deploying new applications. Advocates of \nusing both theories in suitable business requirements believe that \nDevOps can be considered as an extension of Agile methodology. \nAgile focuses on cross-functional teams, generally consisting of \ndesigners, testers, and developers[5]. Drury et al. mention that \nDevOps takes one step further by introducing an operator who \ncan support the transition between software and implementation. \nDue to the inherent communications between DevOps and other \nteams, DevOps can help to automate processes and increase \nopenness for all teams. \ncontent  \nIII. \nDevOps VS AGILE \nGiven that the background and discussion dimensions are \nunderstood, it is important to explore the comparisons between \nDevOps and agile methodologies [6]. Agile methodology is a \nsoftware development tool, which improves the response loop \nbetween users and software developers, while DevOps is a \ncomposition of cultures, practices, and instruments that divides \nsilos into teams. While DevOps and agile, methodologies have \nsimilarities, they are not the same, but some people claim that \nDevOps is better as compared to agile methodology. It is \nnecessary to get to the nuts and bolts to remove the ambiguity [7]. \nThe contrast at a high level helps to understand the various fields \non which both works. A. Differences \nThe differences between agile and DevOps methodologies are as \nfollows:  \na) Agile methodology is a project management strategy, \nwhereas DevOps works on pipeline optimization. \nb) Agile concentrates on flexibility in necessities and the \nadvancement of functions, whereas DevOps emphasizes \non continuous integration and installation of software \ndeveloped [8]. \nc) Agile is commonly aligned with systems like Scrum, \nDaD, LeSS and SAFe, but DevOps does not necessarily \napply to specific frameworks. \nd) Agile emphasizes on operations and DevOps on \noperational efficiency and automation. \nWhat occurs after software development defines the \ndistinction between the two. In both DevOps and Agile, the \nsoftware is developed, tested, and deployed. But after these \n3 stages, pure agile appears to stop. DevOps, by contrast, \nincludes constant operations [9].  The monitoring and \ndevelopment of software are therefore continuous. In agile, \nindividual people build and test the software and deploy it. \nDevOps is all responsible for the role of engineering in \nDevOps; technology is business and software is business. \nDevOps is more linked to cost reduction and agile is more \nlinked with lean and waste reduction, and terms such as agile \naccounts for projects and a minimum viable product (MVP) \nare important. Instead of predictive steps, Agile emphasizes \nand promotes empiricism (adaptation, openness, and \ninspection) [10]. When one is not focused on delivering value \nto the clients, a well-managed and automated production \npipeline does no good [11]. The explanation as to why \nDevOps and Agile are confused is simple: many of the basic \nprinciples overlap. The word \"continuous delivery\" can also \nbe correlated with the two: cooperation, pace, feedback loops. \nIt is important to understand how and why they are distinct \nand, more specifically, how they can complement one \nanother by gaining a clear [12]. \nAgile focuses solely on the development and deployment of \nsoftware while DevOps tends to add IT to the mix. Both are \nmethodologies that are important for software development [13]. \nThe Agile methodology has been in existence for Over 20 years \nago while DevOps was recently discovered. \n \n \nElectronic copy available at: https://ssrn.com/abstract=3655581",
    "3": "www.ijcrt.org                                                                 © 2017 IJCRT | Volume 5, Issue 3 August 2017 | ISSN: 2320-2882 \nIJCRT1133441 \nInternational Journal of Creative Research Thoughts (IJCRT) www.ijcrt.org \n948 \n \nB. Similarities \n The concepts of both are centered upon how quickly \nsoftware can be developed without harming customers nor \noperations. They both believe in quick software development. \nBoth approaches emphasize speed and consistency [14]. Both are \nsufficiently malleable and therefore can be integrated into \nany business models and industries. Both DevOps and Agile are \nmutually complementary. Agile helps teams to prioritize the \nversatility, rapidity, and high quality of providing business value \nto customers [15]. DevOps offers from a technological point of \nview the underlying organizational culture and infrastructure. The \ncomplementary relationship is seen in this light. Well-informed \nproject stakeholders and sprints will mean nothing if the \nunderlying facilities collapse because of the differences in both \ndevelopment and production contexts [16]. The opposite is true, \ntoo. \nunderstanding \nof \nthe \ntwo \nmethodologies. \n \nFig ii: Differences between Agile and DevOps methodologies [17]. \nAgile use implementation in large projects \nAgile was developed to assist businesses in meeting existing \nneeds in the world of business and a positive and creative working \nclimate. In the literature on how Agile strategies interact with \nprogress, there has been very little documentation of the \nOrganizational Process Improvement Program [18].  Further \nimprovements in technological innovation can be shaped, for \nexample, by corporate business models, concurrent design, \nmultisectoral management, and proactive development [19]. \nExperts asked on what they felt were the major research issue in \ntheir disciplines at the 2010 XP meeting in Trondheim, \nNorway mentioned that the location of agile as well as large \nventures has been the top of the list.  \nIV. \nCHALLENGES: AGILE APPROACH \nEven though agile technology seems suitable for small \nteams with direct involvement, multiple barriers exist in large \nmulti-site, multi-customer, and multi-project partnerships to \nincorporate these practices [20].  As a result, there was a list of \ntransitional challenges and a list of almost forty clear barriers to \nagile use in large groups. Many of these problems have been \nidentified by the degree of complexity, but others have been \nidentified by the friction between agile and traditional societies; \nfor example, contradictions between design processes, changes in \nsubsystems that cannot be affected, complex life cycles, and \ndifficulties in using agile heritage frames. Agile design \napproaches must be tailored to existing procedures in the \nenterprise [21]. \nV. \nAGILE AND DEVOPS CULTURE \nAlthough Agile doesn't always lead to DevOps, the \nculture changes in an organization are profound. An agile \napproach will encourage a change in development thinking[22]. \nAgile thinking encourages tiny, easy-to-use transitions that lead \nto big improvements over time, rather than thinking of growth as \ncumbersome [23]. Businesses of all sizes have studied how many \nunits can increase their work in an agile way. Currently, some \ncompanies are Agile. DevOps can however bring about its \ncultural changes, such as improved communications and stable \nbalance with transformation and flexibility [24]. The choice to use \nboth concepts is an active decision, which many analysts think \ncould lead to good decision making and therefore to a better \nculture of the business. \nVI. \nCONCLUSION \nAgile and DevOps are different, even though their correlations \ncause people to assume that they are the same. This is a disservice \nto both agile or DevOps. Both help teams to work faster and more \nefficiently, where quality work is delivered and contented \ncustomers. DevOps is a collaboration-building framework for the \nTechnology and Operations team. This allows the consumers to \nquickly and automatedly deploy code for production. It helps to \nspeed up the delivery of products and services through an \norganization. With these insights in mind, it is clear that both \nAgile and DevOps strive for a more efficient way to bring the end-\nusers' value— but from various angles. It can be defined as \naligning development and IT operation. Agile seeks to improve \nefficiency for developers and release schedules, while DevOps \nbrings together the operations team to allow continuous \nimplementation and continuous delivery [25]. It has also helped \nto promote innovative thoughts beyond agile development and \nmulti-functional (DevOps) as well as end-to-end processes that \naffect software companies and customers. Several organizations \nhave effectively adopted agile techniques to speed up the \ndevelopment of applications. The days of waterfall strategies are \nlong gone. Agile has started to grow slowly into other \ndownstream sectors, including IT and operations, in the \ntechnology organization. Teams, simplified processes, improved \nfeedback loops, and driven IT departments become much faster \nwith an innovation that has a profound impact on the whole \norganization. To build on this performance, DevOps, and \nContinuous License (CD) have been built to support and improve \nagility, reactivity, and fast times for marketing over the entire life \ncycle of software delivery. However, software teams must have a \nhigh level of understanding of how to deploy and implement these \nmethodologies. Agile and DevOps are by no means adversaries \n(or at least they are not intended). Throughout the agile revolution, \nthey are much more allies than enemies. Both Agile and DevOps \neasily work in the same space either Inclusively or exclusively. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nElectronic copy available at: https://ssrn.com/abstract=3655581",
    "4": "www.ijcrt.org                                                                 © 2017 IJCRT | Volume 5, Issue 3 August 2017 | ISSN: 2320-2882 \nIJCRT1133441 \nInternational Journal of Creative Research Thoughts (IJCRT) www.ijcrt.org \n949 \n \nREFERENCES \n[1] \nDingsøyr, T., Nerur, S., Balijepally, V., and Moe, N., 2012, \"A decade of \nagile methodologies: Towards  \nexplaining agile software development\", Journal of Systems and Software, \n85(6), pp. 1213-1221. \n[2] \nLaanti, M., Salo, O., and Abrahamsson, P., 2011, \"Agile methods rapidly \nreplacing traditional methods       \nat Nokia: A survey of opinions on agile transformation\", Information and \nSoftware Technology, 53(3), pp. 276-290.  \n[3] \nPedrycz, W., 2006, \"Quantitative logic-based framework for agile \nmethodologies\", Journal of Systems  \nArchitecture, 52(11), pp. 700-707. \n[4] \nForsgren, N., and Humble, J., 2015, \"DevOps: Profiles in ITSM \nPerformance and Contributing  \nFactors\", SSRN Electronic Journal. \n \n[5] \nDzamashvili Fogelström, N., Gorschek, T., Svahnberg, M., and Olsson, P., \n2010, \"The impact of agile  \nprinciples on market-driven software product development\", Journal of \nSoftware Maintenance and Evolution: Research and Practice, 22(1), pp. 53-\n80. \n[6] \nDrury, M., Conboy, K., and Power, K., 2012, \"Obstacles to decision \nmaking in Agile software  \ndevelopment teams\", Journal of Systems and Software, 85(6), pp. 1239-\n1254.  \n[7] \nForsgren, N., and Humble, J., 2015, \"DevOps: Profiles in ITSM \nPerformance and Contributing  \nFactors\", SSRN Electronic Journal.  \n[8] \nAmorim, A., Mira da Silva, M., Pereira, R., and Gonçalves, M., 2020, \n\"Using agile methodologies for  \nadopting COBIT\", Information Systems, p. 101496. \n[9] \nKamel, M., Bediwi, I., and Al-Rashoud, M., 2010, \"Planned Methodologies \nvs. Agile Methodologies  \nunder the Pressure of Dynamic Market\", Journal of King Abdulaziz \nUniversity-Engineering Sciences, 21(1), pp. 19-35. \n[10] Spinellis, D., 2016, \"Being a DevOps Developer\", IEEE Software, 33(3), \npp. 4-5. \n[11] Saiedian, H., and Dale, R., 2000, \"Requirements engineering: making the \nconnection between  \nthe software developer and customer\", Information and Software \nTechnology, 42(6), pp. 419- \n428. \n[12] Saeeda, H., Arif, F., Mehmood Minhas, N., and Humayun, M., 2015, \n\"Agile Scalability for Large  \nScale Projects: Lessons Learned\", Journal of Software, 10(7), pp. 893-903. \n[13] Wettinger, J., Breitenbücher, U., Falkenthal, M., and Leymann, F., 2016, \n\"Collaborative gathering and  \ncontinuous delivery of DevOps solutions through repositories\", Computer \nScience - Research and Development, 32(3-4), pp. 281-290. \n[14] Sidky, A., Arthur, J., and Bohner, S., 2007, \"A disciplined approach to \nadopting agile practices: the  \nagile adoption framework\", Innovations in Systems and Software \nEngineering, 3(3), pp. 203-216.  \n[15] Petersen, K., and Wohlin, C., 2009, \"A comparison of issues and \nadvantages in agile and  \nincremental development between state of the art and an industrial case\", \nJournal of Systems and Software, 82(9), pp. 1479-1490. \n[16] Tan, C., and Teo, H., 2007, \"Training future software developers to acquire \nagile development  \nskills\", Communications of the ACM, 50(12), p. 97. \n[17] Ståhl, D., and Bosch, J., 2014, \"Modeling continuous integration practice \ndifferences in industry  \nsoftware development\", Journal of Systems and Software, 87, pp. 48-59. \n[18] Turley, R. T., and Bieman, J. M.,1994), “Identifying essential \ncompetencies of software  \nengineers,” In ACM Conference on computer science, 271–278. \n[19] Ambler, S., and Lines, M., 2012, Disciplined agile delivery, IBM Press, \nUpper Saddle River, N.J. \n[20] Hill, P., 2011, Practical software project estimation, McGraw-Hill, New \nYork. \n[21] Hüttermann, M.,2012, “DevOps for developers,” Berkeley, CA: Apress. \n[22] Gregory, J., and Crispin, L., 2015, “More agile testing, \"Addison-Wesley, \nUpper Saddle River,  \nN.J. \n[23] Novak, I., 2012, “Beginning Windows 8 application development,” Wiley, \nIndianapolis, IN. \n[24] Rico, D., Sayani, H., Sone, S., & Safari, an O'Reilly Media Company, 2009, \n“The Business Value of Agile Software Methods,” J. Ross Publishing. \n[25] Conboy, K., Coyle, S., Wang, X., and Pikkarainen, M., 2011, \"People over \nProcess: Key  \nChallenges in Agile Development\", IEEE Software, 28(4), pp. 48-57. \n \n \nElectronic copy available at: https://ssrn.com/abstract=3655581"
  },
  "tables": {
    "1": [
      [
        [
          "Keywords: DevOps, Automation, software engineering,"
        ],
        [
          "configuration management, agile methodology"
        ]
      ],
      [
        [
          "Laanti, Salo, and Abrahamsson state that as software developers"
        ],
        [
          "are aware of the immediate limitations of heavy-weight processes"
        ],
        [
          "such as the Waterfall method, they are searching for a way to"
        ],
        [
          "simplify and make tweaking of software more agile [2]. They"
        ],
        [
          "have decided to give end-user input more chances to ensure they"
        ],
        [
          "are on the right track. In the 1990s a large number of lightweight"
        ],
        [
          "theories, including the famous Scrum and Kanban methods, were"
        ],
        [
          "developed for software development. In 2001, the Agile Software"
        ],
        [
          "Development Manifesto codified many of these concepts and put"
        ],
        [
          "them within the framework of the advancement of agile software."
        ],
        [
          "According to Pedrycz, agile methodologies value the following:"
        ]
      ],
      [
        [
          "People-especially the teammates, clients, and their"
        ],
        [
          "interactions — rather than tools and processes [3]."
        ],
        [
          "Immediacy-Functional applications instead"
        ],
        [
          "of comprehensive documentation."
        ],
        [
          "Flexibility-To responds to and embraces change, rather"
        ],
        [
          "than to a predetermined plan."
        ]
      ]
    ],
    "2": [
      [
        [
          "The agile methodology also weakens the concept of a \"finished"
        ],
        [
          "product,\" which was the main objective of the Waterfall approach"
        ],
        [
          "Agile considers the fact that software development should be"
        ],
        [
          "iterative and incremental. This means that the customer can"
        ],
        [
          "execute new features or improve the existing functions on each"
        ],
        [
          "new software launch. Agile methodologies allow designing"
        ],
        [
          "software to break down into manageable parts called \"user"
        ],
        [
          "stories.\" Pedrycz suggests that this underline Agile 's value for the"
        ],
        [
          "consumer, allowing developers to deliver quicker input loops and"
        ],
        [
          "maintain product compatibility with business needs [3]. Agile also"
        ],
        [
          "supports adaptive planning, evolving development, early and on-"
        ],
        [
          "going delivery, and constant improvement to enable developers"
        ],
        [
          "to respond quickly and flexibly to customer needs, software, and"
        ],
        [
          "other external factors."
        ]
      ],
      [
        [
          "using both theories in suitable business requirements believe that"
        ],
        [
          "DevOps can be considered as an extension of Agile methodology."
        ],
        [
          "Agile focuses on cross-functional teams, generally consisting of"
        ],
        [
          "designers, testers, and developers[5]. Drury et al. mention that"
        ],
        [
          "DevOps takes one step further by introducing an operator who"
        ],
        [
          "can support the transition between software and implementation."
        ],
        [
          "Due to the inherent communications between DevOps and other"
        ],
        [
          "teams, DevOps can help to automate processes and increase"
        ],
        [
          "openness for all teams."
        ],
        [
          "content"
        ]
      ],
      [
        [
          "Given that the background and discussion dimensions are",
          null
        ],
        [
          "understood, it is important to explore the comparisons between",
          null
        ],
        [
          "DevOps and agile methodologies [6]. Agile methodology is a",
          null
        ],
        [
          "software development tool, which improves the response loop",
          null
        ],
        [
          "between users and software developers, while DevOps is a",
          null
        ],
        [
          "composition of cultures, practices, and instruments that divides",
          null
        ],
        [
          "silos into teams. While DevOps and agile, methodologies have",
          null
        ],
        [
          "similarities, they are not the same, but some people claim that",
          null
        ],
        [
          "DevOps is better as compared to agile methodology. It is",
          null
        ],
        [
          "necessary to get to the nuts and bolts to remove the ambiguity [7].",
          null
        ],
        [
          "The contrast at a high level helps to understand the various fields",
          null
        ],
        [
          "on which both works. A. Differences",
          null
        ],
        [
          "The differences between agile and DevOps methodologies are as",
          null
        ],
        [
          "follows:",
          null
        ],
        [
          null,
          "Agile methodology is a project management strategy,"
        ],
        [
          null,
          "whereas DevOps works on pipeline optimization."
        ],
        [
          null,
          "Agile concentrates on flexibility in necessities and the"
        ],
        [
          null,
          "advancement of functions, whereas DevOps emphasizes"
        ],
        [
          null,
          "on continuous integration and installation of software"
        ],
        [
          null,
          "developed [8]."
        ],
        [
          null,
          "Agile is commonly aligned with systems like Scrum,"
        ],
        [
          null,
          "DaD, LeSS and SAFe, but DevOps does not necessarily"
        ],
        [
          null,
          "apply to specific frameworks."
        ],
        [
          null,
          "Agile emphasizes on operations and DevOps on"
        ]
      ],
      [
        [
          "Agile was a response to the approaches in waterfall"
        ],
        [
          "methodologies, but DevOps was not an answer to Agile. Both"
        ],
        [
          "hypotheses are not the same – because businesses have started to"
        ],
        [
          "see connections and improved performance and efficiency when"
        ],
        [
          "used in tandem. Two important areas were known as IT"
        ],
        [
          "operations (ITOps) and Development Operations (DevOps),"
        ],
        [
          "which are essential for businesses in the modern era. ITOP 's"
        ],
        [
          "functions include guaranteeing safety, compliance, and reliability"
        ],
        [
          "while DevOps is in charge of designing and delivering end-user"
        ],
        [
          "with new products. Even as ITOps provides reliability and safety"
        ],
        [
          "for all customer needs via the network, DevOps goes hand in hand"
        ],
        [
          "with flexibility and thorough analysis and communication with"
        ],
        [
          "the implementation of new software."
        ]
      ],
      [
        [
          null,
          null,
          "What occurs after software development defines the"
        ],
        [
          null,
          "distinction between the two. In both DevOps and Agile, the",
          null
        ],
        [
          null,
          "software is developed, tested, and deployed. But after these",
          null
        ],
        [
          null,
          "3 stages, pure agile appears to stop. DevOps, by contrast,",
          null
        ],
        [
          null,
          "includes constant operations [9]. The monitoring and",
          null
        ],
        [
          null,
          "development of software are therefore continuous. In agile,",
          null
        ],
        [
          null,
          "individual people build and test the software and deploy it.",
          null
        ],
        [
          null,
          "DevOps is all responsible for the role of engineering in",
          null
        ],
        [
          null,
          "DevOps; technology is business and software is business.",
          null
        ],
        [
          null,
          "DevOps is more linked to cost reduction and agile is more",
          null
        ],
        [
          null,
          "linked with lean and waste reduction, and terms such as agile",
          null
        ],
        [
          null,
          "accounts for projects and a minimum viable product (MVP)",
          null
        ],
        [
          null,
          "are important. Instead of predictive steps, Agile emphasizes",
          null
        ],
        [
          null,
          "and promotes empiricism (adaptation, openness, and",
          null
        ],
        [
          null,
          "inspection) [10]. When one is not focused on delivering value",
          null
        ],
        [
          null,
          "to the clients, a well-managed and automated production",
          null
        ],
        [
          null,
          "pipeline does no good [11]. The explanation as to why",
          null
        ],
        [
          null,
          "DevOps and Agile are confused is simple: many of the basic",
          null
        ],
        [
          null,
          "principles overlap. The word \"continuous delivery\" can also",
          null
        ],
        [
          null,
          "be correlated with the two: cooperation, pace, feedback loops",
          null
        ],
        [
          null,
          "It is important to understand how and why they are distinct",
          null
        ],
        [
          null,
          "and, more specifically, how they can complement one",
          null
        ],
        [
          null,
          "another by gaining a clear [12].",
          null
        ],
        [
          null,
          "Agile focuses solely on the development and deployment of",
          null
        ],
        [
          "software while DevOps tends to add IT to the mix. Both are",
          null,
          null
        ],
        [
          "methodologies that are important for software development [13].",
          null,
          null
        ],
        [
          "The Agile methodology has been in existence for Over 20 years",
          null,
          null
        ],
        [
          "ago while DevOps was recently discovered.",
          null,
          null
        ]
      ],
      [
        [
          "Fig i: DevOps continuous delivery life cycle"
        ],
        [
          "Agile and DevOps are fused [3]."
        ]
      ],
      [
        [
          null,
          "Pedrycz states that in the past decade, firms have tried"
        ],
        [
          "turning from their original IT team to the specific DevOps group",
          null
        ],
        [
          "or introducing an agile methodology to their software",
          null
        ],
        [
          "development projects [3]. Multiple relationships between these",
          null
        ],
        [
          "two concepts surfaced through these changes in the organization.",
          null
        ],
        [
          "Agile Teams are focused on automated design, test automation,",
          null
        ],
        [
          "Continuous Integration (CI). According to Forsgren and Humble",
          null
        ],
        [
          "DevOps teams frequently need to use these tools, as well as",
          null
        ],
        [
          "metrics and monitoring systems, configuration management,",
          null
        ],
        [
          "virtualization, and cloud computing [4]. Agile looked like a whole",
          null
        ],
        [
          "new paradigm for software developers who were disappointed by",
          null
        ],
        [
          "the limitations of a waterfall approach. However Agile is not",
          null
        ],
        [
          "perfect according to Forsgren and Humble. Common",
          null
        ],
        [
          "disadvantages to Agile planning involve missed deadline,",
          null
        ],
        [
          "completed elements which, owing to separated scrum or groups,",
          null
        ],
        [
          "are incompatible with each other and additional features splitting",
          null
        ],
        [
          "old features – due to the lack of coordination with DevOps and",
          null
        ],
        [
          "ITOps[4]. All these issues are related to Agile development by",
          null
        ],
        [
          "one thing: the breakdown in communication.",
          null
        ]
      ],
      [
        [
          null,
          "Forsgren and Humble also suggest that DevOps fills the"
        ],
        [
          "gap in this case. DevOps is a communications theory, both within",
          null
        ],
        [
          "itself and across other departments, because developers and",
          null
        ],
        [
          "operators need to coordinate [4]. DevOps works regularly with",
          null
        ],
        [
          "ITOps to maintain secure and stable testing environments so it",
          null
        ],
        [
          "makes sense to turn to other departments such as marketing so",
          null
        ],
        [
          "customer service by deploying new applications. Advocates of",
          null
        ]
      ]
    ],
    "3": [
      [
        [
          null,
          "B. Similarities"
        ],
        [
          null,
          "The concepts of both are centered upon how quickly"
        ],
        [
          "software can be developed without harming customers nor",
          null
        ],
        [
          "operations. They both believe in quick software development.",
          null
        ],
        [
          "Both approaches emphasize speed and consistency [14]. Both are",
          null
        ],
        [
          "sufficiently malleable and therefore can be integrated into",
          null
        ],
        [
          "any business models and industries. Both DevOps and Agile are",
          null
        ],
        [
          "mutually complementary. Agile helps teams to prioritize the",
          null
        ],
        [
          "versatility, rapidity, and high quality of providing business value",
          null
        ],
        [
          "to customers [15]. DevOps offers from a technological point of",
          null
        ],
        [
          "view the underlying organizational culture and infrastructure. The",
          null
        ],
        [
          "complementary relationship is seen in this light. Well-informed",
          null
        ],
        [
          "project stakeholders and sprints will mean nothing if the",
          null
        ],
        [
          "underlying facilities collapse because of the differences in both",
          null
        ],
        [
          "development and production contexts [16]. The opposite is true,",
          null
        ],
        [
          "too.",
          null
        ],
        [
          "understanding of the two methodologies.",
          null
        ]
      ],
      [
        [
          "for example, contradictions between design processes, changes in"
        ],
        [
          "subsystems that cannot be affected, complex life cycles, and"
        ],
        [
          "difficulties in using agile heritage frames. Agile design"
        ],
        [
          "approaches must be tailored to existing procedures in the"
        ],
        [
          "enterprise [21]."
        ]
      ],
      [
        [
          null,
          "Although Agile doesn't always lead to DevOps, the"
        ],
        [
          "culture changes in an organization are profound. An agile",
          null
        ],
        [
          "approach will encourage a change in development thinking[22].",
          null
        ],
        [
          "Agile thinking encourages tiny, easy-to-use transitions that lead",
          null
        ],
        [
          "to big improvements over time, rather than thinking of growth as",
          null
        ],
        [
          "cumbersome [23]. Businesses of all sizes have studied how many",
          null
        ],
        [
          "units can increase their work in an agile way. Currently, some",
          null
        ],
        [
          "companies are Agile. DevOps can however bring about its",
          null
        ],
        [
          "cultural changes, such as improved communications and stable",
          null
        ],
        [
          "balance with transformation and flexibility [24]. The choice to use",
          null
        ],
        [
          "both concepts is an active decision, which many analysts think",
          null
        ],
        [
          "could lead to good decision making and therefore to a better",
          null
        ],
        [
          "culture of the business.",
          null
        ]
      ],
      [
        [
          "Agile and DevOps are different, even though their correlations"
        ],
        [
          "cause people to assume that they are the same. This is a disservice"
        ],
        [
          "to both agile or DevOps. Both help teams to work faster and more"
        ],
        [
          "efficiently, where quality work is delivered and contented"
        ],
        [
          "customers. DevOps is a collaboration-building framework for the"
        ],
        [
          "Technology and Operations team. This allows the consumers to"
        ],
        [
          "quickly and automatedly deploy code for production. It helps to"
        ],
        [
          "speed up the delivery of products and services through an"
        ],
        [
          "organization. With these insights in mind, it is clear that both"
        ],
        [
          "Agile and DevOps strive for a more efficient way to bring the end-"
        ],
        [
          "users' value— but from various angles. It can be defined as"
        ],
        [
          "aligning development and IT operation. Agile seeks to improve"
        ],
        [
          "efficiency for developers and release schedules, while DevOps"
        ],
        [
          "brings together the operations team to allow continuous"
        ],
        [
          "implementation and continuous delivery [25]. It has also helped"
        ],
        [
          "to promote innovative thoughts beyond agile development and"
        ],
        [
          "multi-functional (DevOps) as well as end-to-end processes that"
        ],
        [
          "affect software companies and customers. Several organizations"
        ],
        [
          "have effectively adopted agile techniques to speed up the"
        ],
        [
          "development of applications. The days of waterfall strategies are"
        ],
        [
          "long gone. Agile has started to grow slowly into other"
        ],
        [
          "downstream sectors, including IT and operations, in the"
        ],
        [
          "technology organization. Teams, simplified processes, improved"
        ],
        [
          "feedback loops, and driven IT departments become much faster"
        ],
        [
          "with an innovation that has a profound impact on the whole"
        ],
        [
          "organization. To build on this performance, DevOps, and"
        ],
        [
          "Continuous License (CD) have been built to support and improve"
        ],
        [
          "agility, reactivity, and fast times for marketing over the entire life"
        ],
        [
          "cycle of software delivery. However, software teams must have a"
        ],
        [
          "high level of understanding of how to deploy and implement these"
        ],
        [
          "methodologies. Agile and DevOps are by no means adversaries"
        ],
        [
          "(or at least they are not intended). Throughout the agile revolution"
        ],
        [
          "they are much more allies than enemies. Both Agile and DevOps"
        ],
        [
          "easily work in the same space either Inclusively or exclusively."
        ]
      ],
      [
        [
          "Agile was developed to assist businesses in meeting existing"
        ],
        [
          "needs in the world of business and a positive and creative working"
        ],
        [
          "climate. In the literature on how Agile strategies interact with"
        ],
        [
          "progress, there has been very little documentation of the"
        ],
        [
          "Organizational Process Improvement Program [18]. Further"
        ],
        [
          "improvements in technological innovation can be shaped, for"
        ],
        [
          "example, by corporate business models, concurrent design,"
        ],
        [
          "multisectoral management, and proactive development [19]."
        ],
        [
          "Experts asked on what they felt were the major research issue in"
        ],
        [
          "their disciplines at the 2010 XP meeting in Trondheim,"
        ],
        [
          "Norway mentioned that the location of agile as well as large"
        ],
        [
          "ventures has been the top of the list."
        ]
      ],
      [
        [
          null,
          "Even though agile technology seems suitable for small"
        ],
        [
          "teams with direct involvement, multiple barriers exist in large",
          null
        ],
        [
          "multi-site, multi-customer, and multi-project partnerships to",
          null
        ],
        [
          "incorporate these practices [20]. As a result, there was a list of",
          null
        ],
        [
          "transitional challenges and a list of almost forty clear barriers to",
          null
        ],
        [
          "agile use in large groups. Many of these problems have been",
          null
        ],
        [
          "identified by the degree of complexity, but others have been",
          null
        ],
        [
          "identified by the friction between agile and traditional societies;",
          null
        ]
      ]
    ],
    "4": [
      [
        [
          "Dingsøyr, T., Nerur, S., Balijepally, V., and Moe, N., 2012, \"A decade of"
        ],
        [
          "agile methodologies: Toward"
        ],
        [
          "explaining agile software development\", Journal of Systems and Software,"
        ],
        [
          "85(6), pp. 1213-1221."
        ],
        [
          "Laanti, M., Salo, O., and Abrahamsson, P., 2011, \"Agile methods rapidly"
        ],
        [
          "replacing traditional methods"
        ],
        [
          "at Nokia: A survey of opinions on agile transformation\", Information and"
        ],
        [
          "Software Technology, 53(3), pp. 276-290."
        ],
        [
          "Pedrycz, W., 2006, \"Quantitative logic-based framework for agile"
        ],
        [
          "methodologies\", Journal of Systems"
        ],
        [
          "Architecture, 52(11), pp. 700-707."
        ],
        [
          "Forsgren, N., and Humble, J., 2015, \"DevOps: Profiles in ITSM"
        ],
        [
          "Performance and Contributin"
        ],
        [
          "Factors\", SSRN Electronic Journal."
        ]
      ],
      [
        [
          "Dzamashvili Fogelström, N., Gorschek, T., Svahnberg, M., and Olsson, P.,"
        ],
        [
          "2010, \"The impact of agile"
        ],
        [
          "principles on market-driven software product development\", Journal of"
        ],
        [
          "Software Maintenance and Evolution: Research and Practice, 22(1), pp. 53-"
        ],
        [
          "80."
        ],
        [
          "Drury, M., Conboy, K., and Power, K., 2012, \"Obstacles to decision"
        ],
        [
          "making in Agile software"
        ],
        [
          "development teams\", Journal of Systems and Software, 85(6), pp. 1239-"
        ],
        [
          "1254."
        ],
        [
          "Forsgren, N., and Humble, J., 2015, \"DevOps: Profiles in ITSM"
        ],
        [
          "Performance and Contributin"
        ],
        [
          "Factors\", SSRN Electronic Journal."
        ],
        [
          "Amorim, A., Mira da Silva, M., Pereira, R., and Gonçalves, M., 2020,"
        ],
        [
          "\"Using agile methodologies f"
        ],
        [
          "adopting COBIT\", Information Systems, p. 101496."
        ],
        [
          "Kamel, M., Bediwi, I., and Al-Rashoud, M., 2010, \"Planned Methodologies"
        ],
        [
          "vs. Agile Methodologies"
        ],
        [
          "under the Pressure of Dynamic Market\", Journal of King Abdulaziz"
        ],
        [
          "University-Engineering Sciences, 21(1), pp. 19-35."
        ],
        [
          "Spinellis, D., 2016, \"Being a DevOps Developer\", IEEE Software, 33(3),"
        ],
        [
          "pp. 4-5."
        ],
        [
          "Saiedian, H., and Dale, R., 2000, \"Requirements engineering: making the"
        ],
        [
          "connection between"
        ],
        [
          "the software developer and customer\", Information and Software"
        ],
        [
          "Technology, 42(6), pp. 419-"
        ],
        [
          "428"
        ],
        [
          "Saeeda, H., Arif, F., Mehmood Minhas, N., and Humayun, M., 2015,"
        ],
        [
          "\"Agile Scalability for Large"
        ],
        [
          "Scale Projects: Lessons Learned\", Journal of Software, 10(7), pp. 893-903."
        ],
        [
          "Wettinger, J., Breitenbücher, U., Falkenthal, M., and Leymann, F., 2016,"
        ],
        [
          "\"Collaborative gathering and"
        ],
        [
          "continuous delivery of DevOps solutions through repositories\", Computer"
        ],
        [
          "Science - Research and Development, 32(3-4), pp. 281-290."
        ],
        [
          "Sidky, A., Arthur, J., and Bohner, S., 2007, \"A disciplined approach to"
        ],
        [
          "adopting agile practices: the"
        ],
        [
          "agile adoption framework\", Innovations in Systems and Software"
        ],
        [
          "Engineering, 3(3), pp. 203-2"
        ],
        [
          "Petersen, K., and Wohlin, C., 2009, \"A comparison of issues and"
        ],
        [
          "advantages in agile and"
        ],
        [
          "incremental development between state of the art and an industrial case\","
        ],
        [
          "Journal of Systems and Software, 82(9), pp. 1479-1490."
        ],
        [
          "Tan, C., and Teo, H., 2007, \"Training future software developers to acquire"
        ],
        [
          "agile development"
        ],
        [
          "skills\", Communications of the ACM, 50(12), p. 97"
        ],
        [
          "Ståhl, D., and Bosch, J., 2014, \"Modeling continuous integration practice"
        ],
        [
          "differences in industry"
        ],
        [
          "software development\", Journal of Systems and Software, 87, pp. 48-59."
        ]
      ],
      [
        [
          "Ambler, S., and Lines, M., 2012, Disciplined agile delivery, IBM Press,"
        ],
        [
          "Upper Saddle River, N.J."
        ],
        [
          "Hill, P., 2011, Practical software project estimation, McGraw-Hill, New"
        ],
        [
          "York."
        ],
        [
          "Hüttermann, M.,2012, “DevOps for developers,” Berkeley, CA: Apress."
        ],
        [
          "Gregory, J., and Crispin, L., 2015, “More agile testing, \"Addison-Wesley,"
        ],
        [
          "Upper Saddle River,"
        ],
        [
          "N.J."
        ],
        [
          "Novak, I., 2012, “Beginning Windows 8 application development,” Wiley,"
        ],
        [
          "Indianapolis, IN."
        ],
        [
          "Rico, D., Sayani, H., Sone, S., & Safari, an O'Reilly Media Company, 2009,"
        ],
        [
          "“The Business Value of Agile Software Methods,” J. Ross Publishing."
        ],
        [
          "Conboy, K., Coyle, S., Wang, X., and Pikkarainen, M., 2011, \"People over"
        ],
        [
          "Process: Key"
        ],
        [
          "Challenges in Agile Development\", IEEE Software, 28(4), pp. 48-57."
        ]
      ]
    ]
  },
  "images": {
    "1": [
      {
        "filename": "page_1_image_1.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_1_image_1.jpeg",
        "extraction_date": "2025-01-28T20:20:30.791447",
        "page_number": 1,
        "image_index": 1,
        "width": 419,
        "height": 258
      },
      {
        "filename": "page_1_image_2.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_1_image_2.jpeg",
        "extraction_date": "2025-01-28T20:20:30.798154",
        "page_number": 1,
        "image_index": 2,
        "width": 695,
        "height": 158
      }
    ],
    "2": [
      {
        "filename": "page_2_image_1.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_2_image_1.jpeg",
        "extraction_date": "2025-01-28T20:20:30.801055",
        "page_number": 2,
        "image_index": 1,
        "width": 419,
        "height": 258
      },
      {
        "filename": "page_2_image_2.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_2_image_2.jpeg",
        "extraction_date": "2025-01-28T20:20:30.804695",
        "page_number": 2,
        "image_index": 2,
        "width": 255,
        "height": 171
      }
    ],
    "3": [
      {
        "filename": "page_3_image_1.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_3_image_1.jpeg",
        "extraction_date": "2025-01-28T20:20:30.807108",
        "page_number": 3,
        "image_index": 1,
        "width": 419,
        "height": 258
      },
      {
        "filename": "page_3_image_2.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_3_image_2.jpeg",
        "extraction_date": "2025-01-28T20:20:30.809407",
        "page_number": 3,
        "image_index": 2,
        "width": 270,
        "height": 419
      }
    ],
    "4": [
      {
        "filename": "page_4_image_1.jpeg",
        "path": "output\\images\\temp_0194ae92-59c4-73f8-8475-c9e5ebb8d360\\page_4_image_1.jpeg",
        "extraction_date": "2025-01-28T20:20:30.813393",
        "page_number": 4,
        "image_index": 1,
        "width": 419,
        "height": 258
      }
    ]
  }
}