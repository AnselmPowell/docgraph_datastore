# Generated by Django 5.1.4 on 2025-02-06 01:04

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('attempt_time', models.DateTimeField(auto_now_add=True)),
                ('was_successful', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'login_attempts',
                'indexes': [models.Index(fields=['username', 'ip_address'], name='login_attem_usernam_46c78a_idx'), models.Index(fields=['attempt_time'], name='login_attem_attempt_a9104a_idx')],
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'password_resets',
                'indexes': [models.Index(fields=['user'], name='password_re_user_id_a44016_idx'), models.Index(fields=['token'], name='password_re_token_fb23e2_idx'), models.Index(fields=['expires_at'], name='password_re_expires_d36310_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('login_count', models.IntegerField(default=0)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('account_created', models.DateTimeField(auto_now_add=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('verification_token', models.CharField(blank=True, max_length=255, null=True)),
                ('verification_token_expires', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
                'indexes': [models.Index(fields=['user'], name='user_profil_user_id_fbe33d_idx'), models.Index(fields=['is_email_verified'], name='user_profil_is_emai_f8e735_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_token', models.CharField(max_length=255)),
                ('refresh_token', models.CharField(max_length=255)),
                ('device_info', models.JSONField(null=True)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'indexes': [models.Index(fields=['user'], name='user_sessio_user_id_eb20aa_idx'), models.Index(fields=['session_token'], name='user_sessio_session_baddb8_idx'), models.Index(fields=['expires_at'], name='user_sessio_expires_66ae96_idx')],
            },
        ),
    ]
