# Generated by Django 5.1.1 on 2024-11-19 09:44

import django.contrib.postgres.fields
import django.db.models.deletion
import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentMetadata',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200, null=True), null=True, size=None)),
                ('publication_date', models.DateField(null=True)),
                ('publisher', models.CharField(max_length=200, null=True)),
                ('doi', models.CharField(max_length=100, null=True)),
                ('url', models.URLField(max_length=500, null=True)),
                ('file_name', models.CharField(max_length=200, null=True)),
                ('citation', models.TextField(null=True)),
                ('reference', models.TextField(null=True)),
                ('summary', models.TextField(null=True)),
                ('total_pages', models.IntegerField(null=True)),
                ('relevance_score', models.FloatField(default=0.0)),
                ('relevant_sections', models.IntegerField(default=0)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=50, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'document_metadata',
                'indexes': [models.Index(fields=['relevance_score'], name='document_me_relevan_1b8838_idx'), models.Index(fields=['created_at'], name='document_me_created_0aa4db_idx'), models.Index(fields=['processing_status'], name='document_me_process_44c47a_idx'), models.Index(fields=['last_accessed'], name='document_me_last_ac_57d942_idx')],
            },
        ),
        migrations.CreateModel(
            name='DocumentSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('section_type', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('page_number', models.IntegerField()),
                ('position', models.IntegerField()),
                ('start_text', models.CharField(max_length=200)),
                ('section_id', models.CharField(max_length=100)),
                ('url_fragment', models.CharField(max_length=200)),
                ('has_citations', models.BooleanField(default=False)),
                ('has_tables', models.BooleanField(default=False)),
                ('has_figures', models.BooleanField(default=False)),
                ('has_images', models.BooleanField(default=False)),
                ('citations', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('table_data', models.JSONField(null=True)),
                ('extracted_image_text', models.TextField(null=True)),
                ('relevance_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), default=list, size=None)),
                ('matching_context', models.TextField(null=True)),
                ('matching_theme', models.TextField(null=True)),
                ('matching_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('matching_similar_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), default=list, size=None)),
                ('embedding', pgvector.django.vector.VectorField(dimensions=1536, null=True)),
                ('embedding_updated', models.DateTimeField(auto_now=True, null=True)),
                ('title_group_number', models.IntegerField(null=True)),
                ('title_group_text', models.TextField(null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='research_assistant.documentmetadata')),
            ],
            options={
                'db_table': 'document_sections',
                'ordering': ['page_number', 'position'],
                'indexes': [models.Index(fields=['document', 'page_number'], name='document_se_documen_dc64e1_idx'), models.Index(fields=['section_type'], name='document_se_section_206ad4_idx'), models.Index(fields=['has_citations'], name='document_se_has_cit_e35552_idx'), models.Index(fields=['embedding_updated'], name='document_se_embeddi_26770d_idx')],
            },
        ),
        migrations.CreateModel(
            name='LLMResponseCache',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('response_type', models.CharField(max_length=50)),
                ('query_hash', models.CharField(max_length=100)),
                ('response_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='llm_responses', to='research_assistant.documentmetadata')),
            ],
            options={
                'db_table': 'llm_response_cache',
                'indexes': [models.Index(fields=['document', 'response_type', 'query_hash'], name='llm_respons_documen_bc5eb8_idx'), models.Index(fields=['created_at'], name='llm_respons_created_e754e9_idx')],
                'unique_together': {('document', 'response_type', 'query_hash')},
            },
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('stage', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=50)),
                ('message', models.TextField(null=True)),
                ('duration', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='research_assistant.documentmetadata')),
            ],
            options={
                'indexes': [models.Index(fields=['document', 'stage', 'timestamp'], name='research_as_documen_e3fb48_idx'), models.Index(fields=['status'], name='research_as_status_96a63f_idx')],
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('context', models.TextField()),
                ('theme', models.CharField(max_length=200)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
                ('total_results', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('documents', models.ManyToManyField(to='research_assistant.documentmetadata')),
            ],
            options={
                'db_table': 'search_queries',
                'indexes': [models.Index(fields=['created_at'], name='search_quer_created_02141d_idx'), models.Index(fields=['theme'], name='search_quer_theme_a0301c_idx')],
            },
        ),
    ]




